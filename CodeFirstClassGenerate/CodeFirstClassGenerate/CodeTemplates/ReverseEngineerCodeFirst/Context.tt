<#@ template hostspecific="true" language="C#" #>
<#@ include file="EF.Utility.CS.ttinclude" #><#@
 output extension=".cs" #><#

    var efHost = (EfTextTemplateHost)Host;
    var code = new CodeGenerationTools(this);
#>
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
// using <#= code.EscapeNamespace(efHost.MappingNamespace) #>;

// namespace <#= code.EscapeNamespace(efHost.Namespace) #>
namespace WVC.Models
{
    //public partial class <#= efHost.EntityContainer.Name #> : DbContext
	public partial class WVCContext : DbContext
    {
        //static <#= efHost.EntityContainer.Name #>()
		static WVCContext()
        {
            //Database.SetInitializer<<#= efHost.EntityContainer.Name #>>(null);
			Database.SetInitializer<WVCContext>(null);
        }

		//public <#= efHost.EntityContainer.Name #>()
		public WVCContext()
			//: base("Name=<#= efHost.EntityContainer.Name #>")
			: base("Name=WVCContext")
		{
		}

<#
    foreach (var set in efHost.EntityContainer.BaseEntitySets.OfType<EntitySet>())
    {
				//if(set.ElementType.Name.Contains("aspnet")==true) { continue; }
#>
        public DbSet<<#= set.ElementType.Name #>> <#= set.Name #> { get; set; }
<#
    }
#>

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
<#
    foreach (var set in efHost.EntityContainer.BaseEntitySets.OfType<EntitySet>())
    {
			//if(set.ElementType.Name.Contains("aspnet")==true) { continue; }
#>
            modelBuilder.Configurations.Add(new <#= set.ElementType.Name #>Map());
<#
    }
#>
        }
    }
}
